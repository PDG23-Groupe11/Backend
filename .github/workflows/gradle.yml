###  Secrets GitHub nécessaire
# - DOCKER_USERNAME, DOCKER_PASSWORD : credentials DockerHub pour push l'image
# - GKE_SA_KEY : Credentials Google Kubernetes engine
#   voir https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-google-kubernetes-engine#prerequisites
# - GKE_PROJECT : id du projet sur Google Cloud
#
### Variables GitHub nécessaires
# - GKE_CLUSTER : Nom du cluster Google Kubernetes Engine
# - GKE_ZONE : Zone du cluster GKE


name: Java CI with Gradle
on:
  push:
    branches: [ "main", "dev", "release" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build-test-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew installDist

    - name: Run Unit Test1
      run: ./gradlew test

      # Next only run for release :

    - name: Build Docker Image
      if: ${{ github.ref == 'refs/heads/release' }}
      run: docker build . --file Dockerfile --tag heigpdg112023/pdg11-heig
      
    - name: Log in to Docker Hub
      if: ${{ github.ref == 'refs/heads/release' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image
      if: ${{ github.ref == 'refs/heads/release' }}
      run: docker push heigpdg112023/pdg11-heig:latest

  reload-kubernetes:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/release' }}
    needs: build-test-and-release

    steps:
      # Setup gcloud CLI
      - name: GCloud CLI auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      # Get the GKE credentials
      - name: Getting GKE credentials
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ vars.GKE_CLUSTER }}
          location: ${{ vars.GKE_ZONE }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Reloading the deployment
        run: kubectl rollout restart deployment/api-deployment
