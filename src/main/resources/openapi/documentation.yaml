openapi: "3.0.3"
info:
  title: "Grocerypal API"
  description: "dev API for the small grocery app"
  version: "0.0.1"
servers:
# TODO
  - url: "http://0.0.0.0:8080"
paths:
  /ingredients:
    get:
      description: "Read all ingredients"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ingredient"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /ingredients/{id}:
    get:
      description: "Read Ingredient"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Ingredient"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /ingredients/from_recipe/{id}:
    get:
      description: "Read all Ingredients linked to a recipe, with their quantity"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ingredient"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /recipes:
    get:
      description: "Read all generic recipes"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /recipes/personal/{userId}:
    get:
      description: "Read all personal recipes.\n The userID requirement is temporary, and will be changed in the future"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: "Add a personnal recipe.\n The userID requirement is temporary, and will be changed in the future"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "406":
          description: "Not Acceptable"
          content:
            '*/*':
              schema:
                type: "object"
  /:
    get:
      description: "Service home page"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /status:
    get:
      description: "Basic status report"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Still alive!\nhttps://www.youtube.com/watch?v=VuLktUzq23c"

components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        nb_per:
          type: integer
          description: Number of person this recipe is made for
        prep_time:
          type: integer
          description: Preparation time, in minutes
        instruction:
          type: string
          description: Recipe instructions, formatted in markdown
    Ingredient:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        fiber:
          type: number
          description: grams of fiber per 100g
        protein:
          type: number
          description: grams of protein per 100g
        energy:
          type: integer
          description: calories
        carb:
          type: number
          description: grams of carb per 100g
        fat:
          type: number
          description: grams of fat per 100g
    CompleteRecipe:
        type: object
        properties:
          recipe:
            $ref: "#/components/schemas/Recipe"
          ingredients:
            type: array
            items:
              type: object
              properties:
                ingredientId:
                  type: integer
                unitId:
                  type: integer
                quantity:
                  type: number

